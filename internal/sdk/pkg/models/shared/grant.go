// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type GrantEffect string

const (
	GrantEffectAllow GrantEffect = "allow"
	GrantEffectDeny  GrantEffect = "deny"
)

func (e GrantEffect) ToPointer() *GrantEffect {
	return &e
}

func (e *GrantEffect) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "allow":
		fallthrough
	case "deny":
		*e = GrantEffect(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GrantEffect: %v", v)
	}
}

type Grant struct {
	Action   string       `json:"action"`
	Effect   *GrantEffect `json:"effect,omitempty"`
	Resource *string      `json:"resource,omitempty"`
}
