// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type GrantEffectEnum string

const (
	GrantEffectEnumAllow GrantEffectEnum = "allow"
	GrantEffectEnumDeny  GrantEffectEnum = "deny"
)

func (e GrantEffectEnum) ToPointer() *GrantEffectEnum {
	return &e
}

func (e *GrantEffectEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "allow":
		fallthrough
	case "deny":
		*e = GrantEffectEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GrantEffectEnum: %v", v)
	}
}

type Grant struct {
	Action   string           `json:"action"`
	Effect   *GrantEffectEnum `json:"effect,omitempty"`
	Resource *string          `json:"resource,omitempty"`
}
