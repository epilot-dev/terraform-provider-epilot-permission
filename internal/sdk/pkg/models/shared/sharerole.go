// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type ShareRoleType string

const (
	ShareRoleTypeShareRole ShareRoleType = "share_role"
)

func (e ShareRoleType) ToPointer() *ShareRoleType {
	return &e
}

func (e *ShareRoleType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "share_role":
		*e = ShareRoleType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ShareRoleType: %v", v)
	}
}

// ShareRole - A role that can be assigned to users in other organizations for sharing purposes.
type ShareRole struct {
	// date and time then the role will expire
	ExpiresAt *time.Time `json:"expires_at,omitempty"`
	// List of grants (permissions) applied to the role
	Grants []Grant `json:"grants"`
	// Format: <organization_id>:<slug>
	ID string `json:"id"`
	// Human-friendly name for the role
	Name string `json:"name"`
	// Id of an organization
	OrganizationID string `json:"organization_id"`
	// URL-friendly name for the role
	Slug string        `json:"slug"`
	Type ShareRoleType `json:"type"`
}
